{
  "blockComment": {
    "body": [
      "/*", 
       "* $1", 
       "*/"
    ],
    "description": "block comment",
    "prefix": "__comment"
  },
  "docString": {
    "body": [
      "/*",
      " * @name - $1",
      " * @description - $2",
      " */",
      "interface $1Props {",
      " $3:",
      "}"
    ],
    "description": "Documentation block",
    "prefix": "__doc"
  },
  "arrowFunc": {
    "body": ["const $1 = ({$2}) => {$3}"],
    "description": "single-line function",
    "prefix": "cons"
  },
  "catch": {
    "body": [".catch(err => console.log(err, \"error\"))"],
    "description": "Promise catch",
    "prefix": "__catch"
  },
  "tryCatch": {
    "body": [
      "try {", 
        "$1", 
        "}", 
       "catch (err) {", 
         " $2", 
       "}"
      ],
    "description": "Try/catch",
    "prefix": "__try"
  },
  "consoleLog": {
    "body": ["console.log('$1', $2);"],
    "description": "Log output to console",
    "prefix": "cl"
  },
  "import": {
    "body": ["import {$1} from '$2';"],
    "description": "Import statement",
    "prefix": "imp"
  },
  "reduce": {
    "body": [
      ".reduce((acc, curr, idx, array) => {",
          "return acc",
      "}, [])"
    ],
    "description": "Reduce method",
    "prefix": "__reduce"
  },
  "filter": {
    "body": [
      ".filter((each, idx) => {",
          "return each === $1",
      "})"
    ],
    "description": "Filter method",
    "prefix": "__filter"
  },
  "className": {
    "body": [
      "className=\"$1\""
    ],
    "description": "className",
    "prefix": "cn"
  }
}
